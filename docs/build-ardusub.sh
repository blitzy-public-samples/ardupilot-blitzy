#!/usr/bin/env bash

#
# ArduSub Documentation Build Script
# 
# Purpose: Builds ArduSub-specific Doxygen documentation with cross-references
#          to the shared library documentation.
#
# Usage: ./docs/build-ardusub.sh
#
# Dependencies: 
#   - Library documentation must be built first (./docs/build-libs.sh)
#   - Doxygen 1.9.8 or later must be installed
#   - docs/setup.sh must define DOCS_OUTPUT_BASE
#
# Output: HTML documentation in $DOCS_OUTPUT_BASE/ardusub/html/
#

# Directory normalization: Get the absolute path to the docs/ directory
# where this script is located. This ensures the script works regardless
# of where it's invoked from (e.g., ./docs/build-ardusub.sh or 
# cd docs && ./build-ardusub.sh both work correctly).
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Change to repository root directory (parent of docs/)
# All subsequent paths are relative to repository root
cd $DIR/..

# Source the documentation setup script to configure the build environment
# This sets the DOCS_OUTPUT_BASE variable which defines where generated
# documentation will be written (default: $HOME/build/ArduPilot-docs/).
# The setup script also provides common configuration for all doc builds.
. docs/setup.sh

# Library documentation tag file guard check
# Purpose: Ensure library documentation has been built first, as ArduSub
#          documentation depends on library documentation for cross-references.
# 
# The libraries tag file ($DOCS_OUTPUT_BASE/tags/libraries) is generated by
# docs/build-libs.sh and contains Doxygen tags that enable cross-referencing
# between ArduSub vehicle code and shared library APIs (AP_AHRS, AP_Motors, etc.).
#
# Without the library tags, links from ArduSub documentation to library classes
# and functions would be broken. This guard ensures proper build ordering:
#   1. ./docs/build-libs.sh (creates tag file)
#   2. ./docs/build-ardusub.sh (uses tag file for cross-references)
#
# If library docs haven't been built, exit gracefully (exit 0) rather than
# generating incomplete documentation with broken cross-references.
if [ ! -f $DOCS_OUTPUT_BASE/tags/libraries ];
then
	echo "Must build libraries first"
	exit 0
fi

# Run Doxygen to generate ArduSub documentation
# Configuration: docs/config/ardusub contains ArduSub-specific Doxygen settings
#   - Input files: ArduSub/ directory (vehicle-specific code)
#   - Tag files: References $DOCS_OUTPUT_BASE/tags/libraries for cross-links
#   - Output: $DOCS_OUTPUT_BASE/ardusub/html/ (HTML documentation)
#   - Includes: Vehicle-specific flight modes, parameters, GCS integration
#
# The ardusub config file inherits from docs/config/default and adds
# ArduSub-specific input paths, excludes, and customizations.
doxygen docs/config/ardusub

#
# Operational Notes:
# 
# When to rerun this script:
#   - After changes to ArduSub/ source files (*.h, *.cpp)
#   - After changes to ArduSub flight mode implementations
#   - After changes to ArduSub-specific parameters or GCS messages
#   - After updating library documentation (to refresh cross-references)
#
# Dependencies:
#   - docs/build-libs.sh must complete successfully first
#   - Doxygen must be installed (apt-get install doxygen)
#   - Graphviz recommended for diagrams (apt-get install graphviz)
#
# Output verification:
#   - Check for warnings in output (target: zero warnings)
#   - Verify $DOCS_OUTPUT_BASE/ardusub/html/index.html exists
#   - Open in browser: xdg-open $DOCS_OUTPUT_BASE/ardusub/html/index.html
#
# Integration:
#   - Called by Tools/scripts/build_docs.sh for complete doc generation
#   - Can be run standalone for ArduSub-only documentation updates
#

